// Generated by BUCKLESCRIPT VERSION 3.0.0, PLEASE EDIT WITH CARE

import * as Cn from "re-classnames/lib/es6/src/Cn.bs.js";
import * as Block from "bs-platform/lib/es6/block.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as ReasonReact from "reason-react/lib/es6/src/ReasonReact.js";
import * as Config$ReactTemplate from "./Config.bs.js";

var component = ReasonReact.reducerComponent("WithRouter");

function make(children) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (param) {
              return Curry._1(children, param[/* state */1][/* currentRoute */0]);
            }),
          /* initialState */(function () {
              return /* record */[/* currentRoute */Config$ReactTemplate.urlToRoute(ReasonReact.Router[/* dangerouslyGetInitialUrl */3](/* () */0))];
            }),
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */(function (action, _) {
              return /* Update */Block.__(0, [/* record */[/* currentRoute */action[0]]]);
            }),
          /* subscriptions */(function (param) {
              var send = param[/* send */3];
              return /* :: */[
                      /* Sub */[
                        (function () {
                            return ReasonReact.Router[/* watchUrl */1]((function (url) {
                                          return Curry._1(send, /* ChangeUrl */[Config$ReactTemplate.urlToRoute(url)]);
                                        }));
                          }),
                        ReasonReact.Router[/* unwatchUrl */2]
                      ],
                      /* [] */0
                    ];
            }),
          /* jsElementWrapped */component[/* jsElementWrapped */14]
        ];
}

var WithRouter = /* module */[
  /* component */component,
  /* make */make
];

var component$1 = ReasonReact.statelessComponent("Link");

function make$1(route, $staropt$star, children) {
  var className = $staropt$star ? $staropt$star[0] : "";
  return /* record */[
          /* debugName */component$1[/* debugName */0],
          /* reactClassInternal */component$1[/* reactClassInternal */1],
          /* handedOffState */component$1[/* handedOffState */2],
          /* willReceiveProps */component$1[/* willReceiveProps */3],
          /* didMount */component$1[/* didMount */4],
          /* didUpdate */component$1[/* didUpdate */5],
          /* willUnmount */component$1[/* willUnmount */6],
          /* willUpdate */component$1[/* willUpdate */7],
          /* shouldUpdate */component$1[/* shouldUpdate */8],
          /* render */(function (self) {
              var href = Config$ReactTemplate.routeToString(route);
              return ReasonReact.createDomElement("a", {
                          className: className,
                          href: href,
                          onClick: Curry._1(self[/* handle */0], (function ($$event, _) {
                                  $$event.preventDefault();
                                  return ReasonReact.Router[/* push */0](href);
                                }))
                        }, children);
            }),
          /* initialState */component$1[/* initialState */10],
          /* retainedProps */component$1[/* retainedProps */11],
          /* reducer */component$1[/* reducer */12],
          /* subscriptions */component$1[/* subscriptions */13],
          /* jsElementWrapped */component$1[/* jsElementWrapped */14]
        ];
}

var Link = /* module */[
  /* component */component$1,
  /* make */make$1
];

var component$2 = ReasonReact.statelessComponent("NavLink");

function make$2(route, activeRoute, className, children) {
  return /* record */[
          /* debugName */component$2[/* debugName */0],
          /* reactClassInternal */component$2[/* reactClassInternal */1],
          /* handedOffState */component$2[/* handedOffState */2],
          /* willReceiveProps */component$2[/* willReceiveProps */3],
          /* didMount */component$2[/* didMount */4],
          /* didUpdate */component$2[/* didUpdate */5],
          /* willUnmount */component$2[/* willUnmount */6],
          /* willUpdate */component$2[/* willUpdate */7],
          /* shouldUpdate */component$2[/* shouldUpdate */8],
          /* render */(function () {
              return ReasonReact.element(/* None */0, /* None */0, make((function (currentRoute) {
                                var activeRoute$1 = activeRoute ? activeRoute[0] : route;
                                var className$1 = Cn.make(/* :: */[
                                      Cn.unwrap(className),
                                      /* :: */[
                                        Cn.ifTrue(activeRoute$1 === currentRoute, "active"),
                                        /* [] */0
                                      ]
                                    ]);
                                return ReasonReact.element(/* None */0, /* None */0, make$1(route, /* Some */[className$1], children));
                              })));
            }),
          /* initialState */component$2[/* initialState */10],
          /* retainedProps */component$2[/* retainedProps */11],
          /* reducer */component$2[/* reducer */12],
          /* subscriptions */component$2[/* subscriptions */13],
          /* jsElementWrapped */component$2[/* jsElementWrapped */14]
        ];
}

var NavLink = /* module */[
  /* component */component$2,
  /* make */make$2
];

export {
  WithRouter ,
  Link ,
  NavLink ,
  
}
/* component Not a pure module */
